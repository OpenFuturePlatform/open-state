plugins {
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.72'
    id 'org.jetbrains.kotlin.kapt' version '1.3.72'
    id 'org.springframework.boot' version '2.2.5.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group = "io.openfuture"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_12

repositories {
    mavenCentral()
}

ext {
    kotlinVersion = '1.3.72'
    springBootVersion = '2.2.5.RELEASE'
    swaggerVersion = '2.9.2'
    feignVersion = '2.1.3.RELEASE'
}

dependencies {
    //Spring
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    // Feign
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:$feignVersion"

    // Kotlin
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.9'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-reactor', version: '1.3.9'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '1.3.9'

    // Ethereum
    implementation "org.web3j:web3j-spring-boot-starter:1.6.0"
    implementation 'org.web3j:core:4.5.0'

    // Swagger
    //compile "io.springfox:springfox-swagger2:$swaggerVersion"
    //compile "io.springfox:springfox-swagger-ui:$swaggerVersion"

    //Utils
    compile "commons-validator:commons-validator:1.6"
    implementation "org.apache.httpcomponents:httpclient:4.5.7"

    // Tests
    testImplementation "org.springframework.boot:spring-boot-starter-test"

}

// Kotlin
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '12'
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '12'
    }
}

// Tests
jacoco {
    toolVersion = "0.8.3"
}
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['io/openfuture/state/entity/**',
                              'io/openfuture/state/config',
                              'io/openfuture/state/domain'
                    ])
        })
    }
}
check.dependsOn jacocoTestReport
